# main.py

from openai import OpenAI
from telegram.ext import Application
from telegram import BotCommandScopeAllPrivateChats
import asyncio
import logging

import config
from database import db
# –ü–†–ê–í–ò–õ–¨–ù–´–ô –û–§–ò–¶–ò–ê–õ–¨–ù–´–ô –ò–ú–ü–û–†–¢
from supabase import acreate_client, AsyncClient
from handlers import common_handlers, message_handlers, menu_handler, admin_handlers, profile_handler, voice_handler

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

async def setup_bot_commands(application):
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –º–µ–Ω—é –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–æ–≤."""
    
    # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä—É—Å—Å–∫–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    russian_commands = [
        ("start", "üöÄ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º"),
        ("menu", "üì± –û—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),  
        ("balance", "üí∞ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å –∫—Ä–µ–¥–∏—Ç–æ–≤"),
        ("profile", "üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")
    ]
    
    # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π  
    english_commands = [
        ("start", "üöÄ Start using the bot"),
        ("menu", "üì± Open main menu"),
        ("balance", "üí∞ Check credit balance"), 
        ("profile", "üë§ User profile")
    ]
    
    # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–ª—å—Å–∫–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    polish_commands = [
        ("start", "üöÄ Rozpocznij korzystanie z bota"),
        ("menu", "üì± Otw√≥rz menu g≈Ç√≥wne"),
        ("balance", "üí∞ Sprawd≈∫ saldo kredyt√≥w"),
        ("profile", "üë§ Profil u≈ºytkownika")
    ]
    
    try:
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Ä—É—Å—Å–∫–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
        await application.bot.set_my_commands(russian_commands)
        logger.info("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (—Ä—É—Å—Å–∫–∏–π)")
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —è–∑—ã–∫–æ–≤
        
        # –î–ª—è —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        await application.bot.set_my_commands(
            commands=russian_commands,
            scope=BotCommandScopeAllPrivateChats(),
            language_code="ru"
        )
        logger.info("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞")
        
        # –î–ª—è –∞–Ω–≥–ª–æ—è–∑—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π  
        await application.bot.set_my_commands(
            commands=english_commands,
            scope=BotCommandScopeAllPrivateChats(),
            language_code="en"
        )
        logger.info("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞")
        
        # –î–ª—è –ø–æ–ª—å—Å–∫–æ—è–∑—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        await application.bot.set_my_commands(
            commands=polish_commands,
            scope=BotCommandScopeAllPrivateChats(),
            language_code="pl"
        )
        logger.info("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–ª—å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞")
        
        logger.info("üéâ –ú–µ–Ω—é –∫–æ–º–∞–Ω–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –¥–ª—è –≤—Å–µ—Ö —è–∑—ã–∫–æ–≤!")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∫–æ–º–∞–Ω–¥: {e}")

async def main() -> None:
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞."""
    
    # –°–æ–∑–¥–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç Supabase –ü–†–ê–í–ò–õ–¨–ù–´–ú –°–ü–û–°–û–ë–û–ú
    supabase_client: AsyncClient = await acreate_client(config.SUPABASE_URL, config.SUPABASE_KEY)
    logger.info("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase (async) —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.")
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç OpenAI
    openai_client = OpenAI(api_key=config.OPENAI_API_KEY)
    
    application = Application.builder().token(config.TELEGRAM_TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏, –ø–µ—Ä–µ–¥–∞–≤–∞—è –∏–º –Ω—É–∂–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã
    common_handlers.register_handlers(application, supabase_client)
    message_handlers.register_handlers(application, openai_client, supabase_client)
    menu_handler.register_handlers(application, supabase_client)
    admin_handlers.register_handlers(application, supabase_client)
    profile_handler.register_handlers(application, supabase_client)
    voice_handler.register_handlers(application, openai_client, supabase_client)

    try:
        logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        await application.initialize()
        
        # –ù–û–í–û–ï: –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–Ω–æ–≥–æ—è–∑—ã—á–Ω–æ–µ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥
        await setup_bot_commands(application)
        
        await application.start()
        await application.updater.start_polling()
        logger.info("üöÄ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω —Å –º–Ω–æ–≥–æ—è–∑—ã—á–Ω—ã–º –º–µ–Ω—é!")
        
        while True:
            await asyncio.sleep(3600)

    except (KeyboardInterrupt, SystemExit):
        logger.info("–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...")
    finally:
        await application.updater.stop()
        await application.stop()
        await application.shutdown()
        logger.info("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")


if __name__ == "__main__":
    asyncio.run(main())